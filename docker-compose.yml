version: '3.8'

services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    container_name: weather_migrate
    image: weather_migrate:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run migration:run
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    depends_on:
      db:
        condition: service_healthy

  app:
    container_name: weather_app
    image: weather_app:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run start:prod
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      JWT_SECRET: ${JWT_SECRET}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
    depends_on:
      - migrate
    ports:
      - "3000:3000"

  
      